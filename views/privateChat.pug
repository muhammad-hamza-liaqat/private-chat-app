doctype html
html
  head
    title Private Chat
    style.
      body {
          font-family: 'Arial', sans-serif;
          background-color: #f4f4f4;
          margin: 0;
          padding: 0;
          display: flex;
          flex-direction: row;
          height: 100vh;
          justify-content: center;
          align-items: center;
      }

      .container {
        display: flex;
        flex-direction: column;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 800px;
        width: 100%;
      }

      .user-list-container {
        margin-bottom: 20px;
      }

      .user-list {
        list-style-type: none;
        padding: 0;
        text-align: left;
      }

      .user-list li {
        padding: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .user-list li:hover {
        background-color: #f0f0f0;
      }

      .chat-box-container {
        display: none;
        transition: opacity 0.5s ease;
        opacity: 0;
      }

      .chat-box-container.open {
        display: block;
        opacity: 1;
      }

      .chat-box {
        margin-top: 20px;
      }

      textarea#message-input {
        width: calc(100% - 80px);
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 4px;
        border: 1px solid #ccc;
        resize: none;
      }

      button#send-button {
        width: 80px;
        padding: 8px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      button#send-button:hover {
        background-color: #0056b3;
      }
  body
    div.container
      div.user-list-container
        h2 User List
        ul.user-list
      div.chat-box-container
        h2 Chat Box
        div.chat-box
          p
          textarea#message-input(cols="30", rows="5", placeholder="Type your message here...")
          button#send-button Send
  script.
    fetch("http://localhost:8080/api/user/get-user")
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        console.log("Received data:", data); // Log received data
        const userList = document.querySelector('.user-list');
        if (data && data.users) { // Ensure data.users exists
          data.users.forEach(user => {
            const listItem = document.createElement('li');
            listItem.textContent = user.name.trim();
            listItem.dataset.username = user.name.trim(); // Set data-username attribute to the username
            listItem.classList.add('chat-user'); // Add class for styling and identification
            userList.appendChild(listItem);
          });

          // Add event listener for user selection
          userList.addEventListener('click', function(event) {
            // Log the clicked element for debugging
            console.log("Clicked element:", event.target);
            // Find the closest ancestor with the data-username attribute
            const selectedUser = event.target.closest('[data-username]');
            console.log("Selected user element:", selectedUser);
            if (selectedUser) {
              const username = selectedUser.dataset.username;
              console.log("Selected username:", username); // Log selected user
              const chatBoxContainer = document.querySelector('.chat-box-container');
              const chatBox = chatBoxContainer.querySelector('.chat-box');
              chatBox.querySelector('p').textContent = `Chatting with ${username}`;
              chatBoxContainer.classList.add('open');
            }
          });
        } else {
          console.error("No users found in the response");
        }
      })
      .catch(error => console.error("Error fetching user data:", error));
